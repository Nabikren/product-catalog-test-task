import{C as p}from"#entry";const l=()=>{const a=p().public.apiBase,s=async(r,e={})=>{try{const t=await fetch(`${a}${r}`,{headers:{"Content-Type":"application/json",...e.headers},...e});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const o=await t.json();if(!o.success)throw new Error(o.error||"API call failed");return o.data}catch(t){throw console.error("API Error:",t),t}};return{products:{getAll:async(r={},e={})=>{const t=new URLSearchParams;Object.entries({...r,...e}).forEach(([i,n])=>{n!=null&&n!==""&&t.append(i,String(n))});const o=t.toString(),c=`/products${o?`?${o}`:""}`;return s(c)},getById:async r=>s(`/products/${r}`),create:async r=>s("/products",{method:"POST",body:JSON.stringify(r)}),update:async(r,e)=>s(`/products/${r}`,{method:"PUT",body:JSON.stringify(e)}),delete:async r=>s(`/products/${r}`,{method:"DELETE"}),getFilters:async()=>s("/products/filters")},importData:{fromFile:async r=>{const e=new FormData;e.append("file",r),e.append("type","file");const t=await fetch(`${a}/import`,{method:"POST",body:e});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const o=await t.json();if(!o.success)throw new Error(o.error||"Import failed");return o.data},fromGoogleSheets:async(r,e)=>s("/import",{method:"POST",body:JSON.stringify({type:"google_sheets",spreadsheetId:r,range:e||"A:Z"})}),fromUrl:async r=>s("/import",{method:"POST",body:JSON.stringify({type:"url",url:r})})}}};export{l as u};
